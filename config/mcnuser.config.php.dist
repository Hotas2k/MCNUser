<?php
/**
 * Copyright (c) 2011-2013 Antoine Hedgecock.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *   * Neither the names of the copyright holders nor the names of the
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @author      Antoine Hedgecock <antoine@pmg.se>
 * @author      Jonas Eriksson <jonas@pmg.se>
 *
 * @copyright   2011-2013 Antoine Hedgecock
 * @license     http://www.opensource.org/licenses/bsd-license.php  BSD License
 */

use MCNUser\Options\Authentication\Plugin;

return array(
    'MCNUser' => array(

        'authentication' => array(

            // Routes
            'logout_route'           => 'home',
            'failed_login_route'     => 'home',
            'successful_login_route' => 'user/profile',

            // If a param by the name of "redirect" exists
            // and is not empty a user will be redirected to that page
            'enabled_redirection' => true,

            // service locator key for the class to use
            'user_service_sl_key' => 'mcn.service.user',

            // list of plugins
            'plugins' => array(
                'MCNUser\Options\Authentication\Plugin\Standard' => array(
                    'http_identity_field'   => 'identity',
                    'http_credential_field' => 'credential',

                    'entity_identity_property'   => 'email',
                    'entity_credential_property' => 'password',

                    'bcrypt_cost' => 10,
                    'bcrypt_salt' => ':((*^&!@#!(@#^*(&!@)'
                ),

                'MCNUser\Options\Authentication\Plugin\RememberMe' => array(

                    'valid_interval'           => new \DateInterval('P7D'),
                    'entity_identity_property' => 'email'
                )
            ),

            'listeners' => array(

                'mcn.listener.user.authentication.activated',
                'mcn.listener.user.authentication.update-login',
                'mcn.listener.user.authentication.remember-me-cookie-handler'
            )
        ),

        'service' => array(
            'entity_class'  => 'MCNUser\Entity\User',
            'service_class' => 'MCNUser\Service\User',
            'listeners'     => array(

            )
        )
    ),


    'router' => array(

        'routes' => array(

            'mcn-user' => array(

                'type' => 'literal',
                'options' => array(

                    'route' => '/mcn-user'
                ),

                'may_terminate' => false,
                'child_routes'  => array(

                    'login' => array(
                        'type'    => 'Segment',
                        'options' => array(

                            'route' => '/login/[:plugin]',
                            'defaults' => array(

                                'controller' => 'mcn.user.authentication',
                                'action'     => 'login'
                            )
                        )
                    ),

                    'logout' => array(

                        'type'    => 'literal',
                        'options' => array(

                            'route' => '/logout',
                            'defaults' => array(

                                'controller' => 'mcn.user.authentication',
                                'action'     => 'logout'
                            )
                        )
                    )
                )
            )
        )
    )
);
